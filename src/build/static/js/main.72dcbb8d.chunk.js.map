{"version":3,"sources":["components/ToDoList.js","pages/HomePage.js","pages/AboutPage.js","components/ArticlesList.js","modules/actions.js","pages/ArticlesListPage.js","components/CommentsList.js","components/UpvotesSection.js","components/AddCommentForm.js","pages/NotFoundPage.js","pages/ArticlePage.js","NavBar.js","copyHandling.js","pages/Pokemon.js","App.js","serviceWorker.js","modules/reducers.js","modules/store.js","index.js"],"names":["ToDoList","_useState","useState","_useState2","Object","slicedToArray","buttonDisabled","setButtonDisabled","_useState3","_useState4","toDoList","setToDoList","_useState5","_useState6","newToDo","setNewToDo","useEffect","_fetchData","asyncToGenerator","regenerator_default","a","mark","_callee","result","body","wrap","_context","prev","next","fetch","sent","json","stop","apply","this","arguments","fetchData","addToLIst","_ref","_callee2","_context2","method","JSON","stringify","name","crossed","headers","Content-Type","length","react_default","createElement","Fragment","className","value","onChange","event","target","disabled","onClick","map","item","key","HomePage","components_ToDoList","AboutPage","ArticlesList","articles","article","react_router_dom","to","concat","fields","slug","src","featuredImage","file","url","alt","title","substring","ADD_ARTICLES","addArticles","data","type","connect","state","contentfulArticles","dispatch","setContentful","components_ArticlesList","CommentsList","comments","reverse","comment","username","text","UpvotesSection","articleName","upvotes","setArticleInfo","upvoteArticle","_ref2","id","AddCommentForm","setUsername","commentText","setCommentText","setDisabled","addComment","rows","maxLength","cols","NotFoundPage","match","ReactMarkdown","require","articleContent","setArticleContent","setArticle","loading","setLoading","params","_useState7","_useState8","articleInfo","selectedArticle","find","window","scrollTo","pages_NotFoundPage","otherArticles","filter","source","components_UpvotesSection","components_AddCommentForm","components_CommentsList","NavBar","isNavVisible","setNavVisibility","isSmallScreen","setIsSmallScreen","mediaQuery","matchMedia","addListener","handleMediaQueryChange","removeListener","matches","CSSTransition","in","timeout","classNames","unmountOnExit","href","rel","fetchEntries","client","contentful","space","accessToken","abrupt","getEntries","then","response","items","catch","err","console","error","GET_POKEMON_INFO","gql","_templateObject","Pokemon","_useQuery","useQuery","pokemons","pokemon","types","index","dist_default","dist","style","border","color","number","image","height","maximum","weight","attacks","special","e","indx","damage","resistant","weaknesses","App","copy","_this2","setState","props","src_NavBar","react_router","path","component","exact","ArticlesListPage","ArticlePage","Component","content","Boolean","location","hostname","initialState","hasErrors","reducer","undefined","action","assign","objectSpread","createStore","dataReducer","__REDUX_DEVTOOLS_EXTENSION__","cache","InMemoryCache","link","HttpLink","uri","ApolloClient","ReactDOM","render","react_common_esm","es","store","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.72dcbb8d.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nconst ToDoList = () => {\r\n  const [buttonDisabled, setButtonDisabled]= useState(true);\r\n  const[toDoList, setToDoList]=useState([]);\r\n  const[newToDo, setNewToDo]=useState('');\r\n\r\n  useEffect(() =>{\r\n      async function fetchData(){const result = await fetch(`/api/toDoList`);\r\n      const body = await result.json();\r\n      setToDoList(body);\r\n  }\r\n  fetchData();\r\n  },[]);\r\n\r\n  const addToLIst = async ()=>{\r\n    const result=await fetch(`/api/toDoList/add`, {\r\n      method: 'post',\r\n      body: JSON.stringify({name:newToDo, crossed:false}),\r\n      headers:{\r\n        'Content-Type': 'application/json',\r\n      }\r\n    });\r\n    const body = await result.json();\r\n    setToDoList(body);\r\n    setNewToDo('');\r\n  }\r\n  \r\nconst List = () => {\r\n  return(\r\n      <div>\r\n      {toDoList.map((item,key)=>{\r\n        return(\r\n        <div key={key}>   \r\n      {!item.crossed && <div className=\"uncrossed\"> {item.name}</div>}\r\n      {item.crossed && <div className=\"crossed\">{item.name}</div>}\r\n       </div>   \r\n        )})}\r\n      </div>\r\n  )}\r\n\r\n  useEffect(()=>{\r\n    if(newToDo.length>0) setButtonDisabled(false);\r\n       else setButtonDisabled(true);\r\n}, [newToDo]);\r\n\r\nreturn(\r\n  <>\r\n  <div className=\"to-do-list\">\r\n    <h2> To Do List</h2>\r\n    <h4>Number of Tasks: {toDoList.length}</h4>\r\n    <div className=\"toDo-add-section\">\r\n    <label >\r\n      <input value={newToDo} onChange={event => setNewToDo(event.target.value)} />\r\n    </label>\r\n    <button className=\"to-do-button\" disabled={buttonDisabled} onClick={() => addToLIst()}>Add Task</button>\r\n    </div>\r\n    <List/>\r\n    <p>(Feel free to add suggestions)</p>\r\n  </div>\r\n  </>\r\n)\r\n\r\n}\r\n\r\nexport default ToDoList;\r\n","import React from 'react';\r\nimport ToDoList from '../components/ToDoList';\r\n\r\nconst HomePage = () => (\r\n    <div className=\"fade-in\">\r\n    <h1>Welcome to Everything But Bagel!</h1>\r\n    <p>\r\n        I created this mock blog in order to get practice with tool like React. This site is hosted on Amazon Web Services\r\n         and any persisted data (to do list, comments and upvotes) is stored\r\n        using a Mongo database. The calls are made using the Node framework Express. The pokemon card page uses GraphQL\r\n\r\n        All of the content in the articles are manged using the CMS Contentful. Once I recieve the content from\r\n        Contentful I save it using Redux.\r\n        \r\n    </p>\r\n    <div className=\"ToDoList-container\">\r\n    <ToDoList/>\r\n    </div>\r\n    </div>\r\n);\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nconst AboutPage = () => (\r\n    <div className=\"fade-in\">\r\n    <h1>About me</h1>\r\n    <p>\r\n        Hello! I'm Evan Prather. I graduated College with a degree in Computer Science along with minors in Business and Mathematics in 2017.\r\n        </p>\r\n        <p>\r\n        I spent one year working as a full stack developer at Unisys, there I created software that allowed users \r\n        to apply for loans from the USDA.\r\n        </p>\r\n        <p>\r\n        Next I worked for two years as a front end devloper at Martiz Motivation. \r\n        At Maritz I worked on web based applications that gave companies\r\n        the ability to create rewards programs. \r\n    </p>\r\n    <p>I enjoy learning new technologies and working on teams where colaboration are encouraged.</p>  \r\n    <p>\r\n     If I'm not programming I'm probably watching sports, playing video games or trying to learn a new skill.    \r\n    </p>\r\n    </div>\r\n);\r\n\r\nexport default AboutPage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ArticlesList = ({ articles }) => {\r\n    return (\r\n    <>\r\n    {articles.map((article, key) => (\r\n        \r\n        <div className=\"article-container\"  key={key}>\r\n        <Link className=\"article-list\" to={`/article/${article.fields.slug}`}>\r\n            <div className=\"article-item\">\r\n            <img className=\"list-picture\" src={article.fields.featuredImage.fields.file.url} alt={article.fields.title}/>\r\n            <h3>{article.fields.title}</h3>\r\n            <p>{article.fields.body.substring(0, 150)}...</p>\r\n            </div>\r\n        </Link>\r\n        </div>\r\n    ))}\r\n    </>\r\n)};\r\n\r\nexport default ArticlesList;","export const ADD_ARTICLES ='ADD_ARTICLES'\r\n\r\nexport function addArticles(data){\r\n    return{\r\n        type: ADD_ARTICLES,\r\n        data: data\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport ArticlesList from '../components/ArticlesList';\r\nimport PropTypes from 'prop-types'\r\nimport {addArticles} from '../modules/actions'\r\nimport { connect } from 'react-redux';\r\n\r\nconst ArticlesListPage = (contentfulArticles) =>{ \r\n  if(contentfulArticles.contentfulArticles.length<1 || !contentfulArticles.contentfulArticles) return null;\r\n\r\n    return(\r\n        <>\r\n        <h1 className=\"fade-in\">Articles</h1>\r\n        {contentfulArticles.contentfulArticles && <ArticlesList articles={contentfulArticles.contentfulArticles} />}\r\n        </>\r\n)};\r\n\r\nArticlesListPage.propTypes = {\r\n    setContentful: PropTypes.func.isRequired\r\n  }\r\n\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      contentfulArticles: state.articles\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n      setContentful: data => dispatch(addArticles(data))\r\n  });\r\n\r\n  export default connect(mapStateToProps, mapDispatchToProps)(ArticlesListPage);\r\n","import React from 'react';\n\nconst CommentsList = ({ comments }) => {\n    comments.reverse();\n    return (\n    <>\n    <h3>Comments:</h3>\n    {comments.map((comment, key) => (\n        <div className=\"comment\" key={key}>\n            <h4>{comment.username}</h4>\n            <p>{comment.text}</p>\n        </div>\n    ))}\n    </>\n    )\n};\n\nexport default CommentsList;","import React from 'react';\r\n\r\nconst UpvotesSection = ({ articleName, upvotes, setArticleInfo }) => {\r\n    const upvoteArticle = async () => {\r\n        const result = await fetch(`/api/articles/${articleName}/upvote`, {\r\n            method: 'post',\r\n        });\r\n        const body = await result.json();\r\n        setArticleInfo(body);\r\n    }\r\n    return (\r\n        <div id=\"upvotes-section\">\r\n            <button className=\"standard-button\" onClick={() => upvoteArticle()}>Add Upvote</button>\r\n            <p>Total Upvotes: {upvotes}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpvotesSection;","import React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\nconst AddCommentForm = ({ articleName, setArticleInfo }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [commentText, setCommentText] = useState('');\r\n    const [disabled, setDisabled]= useState(true);\r\n\r\n    const addComment = async () => {\r\n        const result = await fetch(`/api/articles/${articleName}/add-comment`, {\r\n            method: 'post',\r\n            body: JSON.stringify({ username, text: commentText }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n        const body = await result.json();\r\n        setArticleInfo(body);\r\n        setUsername('');\r\n        setCommentText('');\r\n        setDisabled(true);\r\n    }\r\n\r\n    useEffect(()=>{\r\n         if(username.length>0 && commentText.length>0) setDisabled(false);\r\n            else setDisabled(true);\r\n    }, [commentText, username]);\r\n\r\n    return (\r\n        <div id=\"add-comment-form\">\r\n            <h3>Add a Comment</h3>\r\n            <label>\r\n                Name *\r\n                <input type=\"text\" id=\"username\" value={username} onChange={(event) => setUsername(event.target.value)} />\r\n            </label>\r\n            <label>\r\n                Comment *\r\n                <textarea rows=\"4\" id=\"comment\" maxLength=\"200\" cols=\"50\" value={commentText} onChange={(event) => setCommentText(event.target.value)} />\r\n            </label>\r\n            <button className=\"standard-button\" disabled={disabled} onClick={() => addComment()}>Add Comment</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddCommentForm;","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n    <h1>404: Page Not Found</h1>\r\n);\r\n\r\nexport default NotFoundPage;","import React, { useState, useEffect } from 'react';\r\nimport ArticlesList from '../components/ArticlesList';\r\nimport CommentsList from '../components/CommentsList';\r\nimport UpvotesSection from '../components/UpvotesSection';\r\nimport AddCommentForm from '../components/AddCommentForm';\r\nimport NotFoundPage from './NotFoundPage';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst ArticlePage = ({ match, contentfulArticles}) => {\r\n    const ReactMarkdown = require('react-markdown');\r\n\r\n    const [articleContent,setArticleContent]=useState();\r\n    const [article, setArticle]=useState();\r\n    const [loading, setLoading]=useState(true);\r\n\r\n    const name = match.params.name;\r\n\r\n    const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] }); \r\n\r\n       useEffect(()=>{\r\n        if(contentfulArticles.length>1){\r\n        setArticleContent(contentfulArticles);\r\n        }\r\n       }, [contentfulArticles]);\r\n       \r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await fetch(`/api/articles/${name}`);\r\n            const body = await result.json();\r\n            setArticleInfo(body);\r\n        }\r\n\r\n        if(articleContent){\r\n            const selectedArticle = articleContent.find(article => {\r\n                return article.fields.slug === name\r\n            });\r\n            setArticle(selectedArticle.fields);\r\n           }\r\n       \r\n        fetchData();\r\n        window.scrollTo(0, 0);\r\n    }, [name]);\r\n\r\n    useEffect(()=>{\r\n        if(articleContent){\r\n            const selectedArticle = articleContent.find(article => {\r\n                return article.fields.slug === name\r\n            });\r\n            if(selectedArticle){\r\n                 setArticle(selectedArticle.fields);\r\n                 setLoading(false);\r\n            }\r\n            setLoading(false);\r\n           }\r\n    }, [articleContent]);\r\n\r\n    if(!article && loading) return <></>\r\n    if(!article && !loading) return <NotFoundPage />\r\n\r\n    const otherArticles = contentfulArticles.filter(article =>{\r\n        if(article.fields.slug !==name) return true;\r\n        return false;\r\n    })\r\n    \r\n    return (\r\n        <div className=\"fade-in\">\r\n        <h1>{article.title}</h1>\r\n        <img\r\n            className=\"img-main\"\r\n            src={article.featuredImage.fields.file.url}\r\n            alt={article.title}\r\n          />\r\n        <ReactMarkdown source={article.body} />\r\n        <UpvotesSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo} />\r\n        <AddCommentForm articleName={name} setArticleInfo={setArticleInfo} />\r\n        <CommentsList comments={articleInfo.comments} />\r\n        <h2>Other Articles:</h2>\r\n        <ArticlesList articles={otherArticles} />\r\n        </div>\r\n    );\r\n}\r\n\r\nArticlePage.propTypes = {\r\n    setContentful: PropTypes.func.isRequired\r\n  }\r\n\r\n  const mapStateToProps = (state) => {\r\n    return {\r\n      contentfulArticles: state.articles\r\n    };\r\n  };\r\n  \r\n  const mapDispatchToProps = (dispatch) => ({\r\n      \r\n  });\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticlePage);","import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nconst NavBar = () => {\r\n\r\n  const [isNavVisible, setNavVisibility] = useState(false);\r\n  const [isSmallScreen, setIsSmallScreen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const mediaQuery = window.matchMedia(\"(max-width: 700px)\");\r\n        mediaQuery.addListener(handleMediaQueryChange);\r\n        handleMediaQueryChange(mediaQuery);\r\n    \r\n        return () => {\r\n          mediaQuery.removeListener(handleMediaQueryChange);\r\n        };\r\n      }, []);\r\n\r\n      const handleMediaQueryChange = mediaQuery => {\r\n        if (mediaQuery.matches) {\r\n          setIsSmallScreen(true);\r\n        } else {\r\n          setIsSmallScreen(false);\r\n        }\r\n      };\r\n\r\n    const toggleNav = () => {\r\n        setNavVisibility(!isNavVisible);\r\n      };\r\n    \r\n    return (\r\n    <header className=\"Header\">\r\n     <CSSTransition\r\n        in={!isSmallScreen || isNavVisible}\r\n        timeout={350}\r\n        classNames=\"NavAnimation\"\r\n        unmountOnExit\r\n      >\r\n    <nav className=\"Nav\">\r\n        <Link onClick={()=>setNavVisibility(false)} to=\"/\">Home</Link>\r\n        <Link onClick={()=>setNavVisibility(false)} to=\"/about\">About</Link>\r\n        <Link onClick={()=>setNavVisibility(false)} to=\"/articles-list\">Articles</Link>\r\n        <Link onClick={()=>setNavVisibility(false)} to=\"/pokemon\">Pokemon</Link>\r\n        <a href=\"https://www.linkedin.com/in/evanprather\"  rel=\"noopener noreferrer\" target=\"_blank\">LinkedIn</a>\r\n        <a href=\"https://github.com/EPrathe\"  rel=\"noopener noreferrer\" target=\"_blank\">GitHub</a>\r\n    </nav>\r\n    </CSSTransition>\r\n    <button onClick={()=>toggleNav()} className=\"Burger\">\r\n    <i className=\"fa fa-bars\"></i>\r\n    </button>\r\n    </header>\r\n)};\r\n\r\nexport default NavBar;","import * as contentful from \"contentful\";\r\n\r\n//https://levelup.gitconnected.com/managing-microcopy-with-react-and-contentful-acae948141ea\r\n\r\nconst fetchEntries = async() => {\r\n  let client = await contentful.createClient({\r\n    space: \"4l76bla6vbnr\",\r\n    accessToken: \"iIk069YpSKyGEGpv-dY5HnnWpXZo1AbP00lp7wcg3y0\"\r\n  });\r\n  return client\r\n    .getEntries(\r\n    //   {\r\n    //   content_type: \"globalCopy\",\r\n    //   include: 2\r\n    // }\r\n    )\r\n    .then(response => response.items)\r\n    .catch(err => console.error(err));\r\n};\r\n\r\nexport const getAllCopy = () => {\r\n  return fetchEntries().then(response => {\r\n    // get data for all components\r\n   // const data = response[0].fields.componentCopy;\r\n\r\n    // extract copy entries per component\r\n    // return response.map(({ fields }) => {\r\n    //   let entries = [];\r\n    //   fields.copies.forEach(f => {\r\n    //     entries[f.fields.id] = f.fields.copy;\r\n    //   });\r\n    //   return {\r\n    //     component: fields.componentName,\r\n    //     copies: entries\r\n    //   };\r\n    // });\r\n    return response;\r\n  });\r\n};\r\n\r\nexport const getCopyForComponent = (copy, componentName) => {\r\n  return copy.find(t => t.component === componentName);\r\n};","import React from 'react';\r\nimport './Pokemon-style.scss';\r\nimport Flippy, {FrontSide, BackSide} from 'react-flippy'\r\n\r\nimport {useQuery} from '@apollo/react-hooks';\r\nimport gql from \"graphql-tag\";\r\n\r\nconst GET_POKEMON_INFO = gql`\r\n{\r\n    pokemons(first: 151) {\r\n      id,\r\n      number,\r\n      name,\r\n      image,\r\n      types,\r\n      weight {\r\n        maximum\r\n      }\r\n      resistant,\r\n      weaknesses,\r\n      height {\r\n        maximum\r\n      }\r\n      attacks {\r\n        special{\r\n          name,\r\n          damage,\r\n          type\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nfunction Pokemon() {\r\n  const{data,loading,error}=useQuery(GET_POKEMON_INFO);\r\n  if(loading) return  <div className=\"loading\"><i className=\"fa fa-spinner fa-spin\">Loading</i></div>\r\n  if(error) return <p>error</p>\r\n  data.pokemons.map((pokemon)=>{\r\n    if(pokemon.types[0]===\"Grass\"){\r\n      pokemon['color']=\"#78C850\"\r\n      return pokemon;\r\n    }\r\n    if(pokemon.types[0]===\"Fire\"){\r\n      pokemon['color']=\"#F08030\"\r\n      return pokemon;\r\n    }\r\n    if(pokemon.types[0]===\"Water\"){\r\n      pokemon['color']=\"#6890F0\"\r\n      return pokemon;\r\n    }\r\n    if(pokemon.types[0]===\"Electric\"){\r\n      pokemon['color']=\"#F8D030\"\r\n      return pokemon;\r\n    }\r\n    if(pokemon.types[0]===\"Bug\"){\r\n      pokemon['color']=\"#A8B820\"\r\n      return pokemon;\r\n    }\r\n    if(pokemon.types[0]===\"Normal\"){\r\n      pokemon['color']=\"#A8A878\"\r\n      return pokemon;\r\n    }\r\n    if(pokemon.types[0]===\"Poison\"){\r\n      pokemon['color']=\"#A040A0\"\r\n      return pokemon;\r\n    }\r\n    if(pokemon.types[0]===\"Ground\"){\r\n      pokemon['color']=\"#E0C068\"\r\n      return pokemon;\r\n    }\r\n    if(pokemon.types[0]===\"Fairy\"){\r\n      pokemon['color']=\"#EE99AC\"\r\n      return pokemon;\r\n    }\r\n    if(pokemon.types[0]===\"Dragon\"){\r\n      pokemon['color']=\"#7038F8\"\r\n      return pokemon;\r\n    }\r\n    if(pokemon.types[0]===\"Fighting\"){\r\n      pokemon['color']=\"#C03028\"\r\n      return pokemon;\r\n    }\r\n    if(pokemon.types[0]===\"Psychic\"){\r\n      pokemon['color']=\"#F85888\"\r\n      return pokemon;\r\n    }\r\n    if(pokemon.types[0]===\"Rock\"){\r\n      pokemon['color']=\"#B8A038\"\r\n      return pokemon;\r\n    }\r\n    if(pokemon.types[0]===\"Ghost\"){\r\n      pokemon['color']=\"#705898\"\r\n      return pokemon;\r\n    } \r\n    return pokemon;\r\n  });\r\n  return (\r\n    <div className=\"main\">\r\n    <h1>Pokémon</h1>\r\n    <p>Every website is better with Pokémon!</p>\r\n    <p>This page was created with the help of \r\n      <a href=\"https://github.com/lucasbento/graphql-pokemon\"  rel=\"noopener noreferrer\" target=\"_blank\"> this graphql api</a>\r\n      </p> \r\n    \r\n    <div className=\"container\">\r\n      {data &&\r\n        data.pokemons &&\r\n        data.pokemons.map((pokemon, index) => ( \r\n          <Flippy key={index}>\r\n          <FrontSide className=\"card\" style={{border: \"5px solid \" + pokemon.color}}>\r\n            <div>\r\n          <div className=\"pokemon-number\">{pokemon.number}</div> \r\n          <div className=\"pokemon-type\">{pokemon.types[0]}</div>\r\n          </div>\r\n            <div className=\"image-container\"><img src={pokemon.image} alt=\"\"/></div>\r\n            <div className=\"card-body\">\r\n              <h2>{pokemon.name}</h2>\r\n              <p>\r\n                Height: {pokemon.height.maximum}\r\n              </p>\r\n              <div>\r\n                <p>  \r\n                Weight: {pokemon.weight.maximum}\r\n                </p>\r\n                </div>\r\n            </div>\r\n          </FrontSide>\r\n          <BackSide className=\"card\" style={{border: \"5px solid \" + pokemon.color}}>\r\n              <div className=\"special-attacks-container\">\r\n              <div>\r\n                <h3>Special Attacks:</h3>\r\n                {pokemon.attacks.special.map((e, indx) => {\r\n                  return <div key={indx}> {e.name}- {e.damage} damage </div>;\r\n                })}\r\n              </div>\r\n              </div>\r\n                <div className=\"strong-container\">\r\n                <h3>Strong Against:</h3>\r\n                    {pokemon.resistant.map((e, indx) => {\r\n                      return <div key={indx}> {e}</div>;\r\n                    })}\r\n\r\n              </div>\r\n              <div className=\"weak-container\">\r\n\r\n                    <h3>Weak Against:</h3>\r\n                    {pokemon.weaknesses.map((e, indx) => {\r\n                      return <div key={indx}> {e}</div>;\r\n                    })}\r\n\r\n              </div>\r\n          </BackSide>\r\n        </Flippy>\r\n        ))}\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pokemon;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\nimport HomePage from './pages/HomePage';\r\nimport AboutPage from './pages/AboutPage';\r\nimport ArticlesListPage from './pages/ArticlesListPage';\r\nimport ArticlePage from './pages/ArticlePage';\r\nimport NotFoundPage from './pages/NotFoundPage';\r\nimport NavBar from './NavBar';\r\nimport './App.scss';\r\nimport { getAllCopy, getCopyForComponent } from \"./copyHandling\";\r\nimport { connect } from 'react-redux';\r\nimport {addArticles} from './modules/actions'\r\nimport PropTypes from 'prop-types'\r\nimport Pokemon from './pages/Pokemon';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    copy: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    getAllCopy().then(copy => {\r\n      this.setState({copy});\r\n      this.props.setContentful(copy)\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { copy } = this.state;\r\n    if (!copy) return null;\r\n\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <NavBar />\r\n          <div id=\"page-body\">\r\n            <Switch>\r\n              <Route path=\"/\" component={HomePage} exact />\r\n              <Route path=\"/about\" component={AboutPage} />\r\n              <Route path=\"/articles-list\" component={ArticlesListPage} />\r\n              <Route path=\"/article/:name\" component={ArticlePage} />\r\n              <Route path=\"/pokemon\" component={Pokemon} />\r\n              <Route component={NotFoundPage} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  setContentful: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    content: state.articles[0]\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setContentful: data => dispatch(addArticles(data))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {ADD_ARTICLES} from \"./actions\"\r\n\r\nconst initialState = {\r\n    articles: [],\r\n    loading: false,\r\n    hasErrors: false,\r\n  }\r\n\r\nfunction reducer(state=initialState, action){\r\n    switch(action.type) {\r\n      \r\n        case ADD_ARTICLES:\r\n          return Object.assign({}, state, \r\n              {\r\n                ...state,\r\n                articles: action.data\r\n               }); \r\n         default: \r\n           return state;\r\n     }\r\n}\r\n\r\n\r\nexport default reducer","import { createStore } from \"redux\";\r\nimport dataReducer from \"./reducers\";\r\n\r\n//window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\r\nexport default createStore(dataReducer,\r\nwindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","import 'whatwg-fetch';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux';\r\nimport store from './modules/store';\r\n\r\nimport { ApolloClient } from 'apollo-client';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport { HttpLink } from 'apollo-link-http';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\n\r\nconst cache=new InMemoryCache();\r\nconst link=new HttpLink({\r\n    uri: 'https://graphql-pokemon.now.sh/'\r\n})\r\n\r\nconst client = new ApolloClient({\r\n    cache,\r\n    link\r\n})\r\n\r\nReactDOM.render(<ApolloProvider client={client}>\r\n<Provider store={store}>\r\n    <App />\r\n</Provider>\r\n</ApolloProvider>,\r\n document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}