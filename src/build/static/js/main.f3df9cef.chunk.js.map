{"version":3,"sources":["components/ToDoList.js","pages/HomePage.js","pages/AboutPage.js","components/ArticlesList.js","pages/ArticlesListPage.js","components/CommentsList.js","components/UpvotesSection.js","components/AddCommentForm.js","pages/NotFoundPage.js","pages/ArticlePage.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["ToDoList","_useState","useState","_useState2","Object","slicedToArray","buttonDisabled","setButtonDisabled","_useState3","_useState4","toDoList","setToDoList","_useState5","_useState6","newToDo","setNewToDo","useEffect","_fetchData","asyncToGenerator","regenerator_default","a","mark","_callee","result","body","wrap","_context","prev","next","fetch","sent","json","stop","apply","this","arguments","fetchData","addToLIst","_ref","_callee2","_context2","method","JSON","stringify","name","crossed","headers","Content-Type","length","react_default","createElement","Fragment","className","value","onChange","event","target","disabled","onClick","map","item","key","HomePage","components_ToDoList","AboutPage","href","rel","ArticlesList","articles","article","react_router_dom","to","concat","fields","slug","src","featuredImage","file","url","alt","title","substring","ArticlesListPage","articleContent","setArticleContent","getContentful","client","contentful","space","accessToken","abrupt","getEntries","then","_ref2","items","components_ArticlesList","CommentsList","comments","reverse","comment","username","text","UpvotesSection","articleName","upvotes","setArticleInfo","upvoteArticle","id","AddCommentForm","setUsername","commentText","setCommentText","setDisabled","addComment","type","rows","maxLength","cols","NotFoundPage","ArticlePage","match","ReactMarkdown","require","setArticle","loading","setLoading","params","_useState7","_useState8","articleInfo","_ref3","selectedArticle","find","_ref4","_callee3","_context3","window","scrollTo","pages_NotFoundPage","otherArticles","filter","source","components_UpvotesSection","components_AddCommentForm","components_CommentsList","NavBar","App","src_NavBar","react_router","path","component","exact","Component","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6TAgEeA,EA9DE,WAAM,IAAAC,EACsBC,oBAAS,GAD/BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACdK,EADcH,EAAA,GACEI,EADFJ,EAAA,GAAAK,EAEQN,mBAAS,IAFjBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEfE,EAFeD,EAAA,GAELE,EAFKF,EAAA,GAAAG,EAGMV,mBAAS,IAHfW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGfE,EAHeD,EAAA,GAGNE,EAHMF,EAAA,GAKrBG,oBAAU,WAAK,SAAAC,IAAA,OAAAA,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,EAAAC,EAAAC,KACX,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAgDC,MAAK,iBAArD,cAAiCN,EAAjCG,EAAAI,KAAAJ,EAAAE,KAAA,EACmBL,EAAOQ,OAD1B,OACMP,EADNE,EAAAI,KAEAnB,EAAYa,GAFZ,wBAAAE,EAAAM,SAAAV,OADWW,MAAAC,KAAAC,YAAA,WAAAlB,EAAAgB,MAAAC,KAAAC,WAKfC,IACE,IAEF,IAAMC,EAAS,eAAAC,EAAAlC,OAAAc,EAAA,EAAAd,CAAAe,EAAAC,EAAAC,KAAG,SAAAkB,IAAA,IAAAhB,EAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EACGC,MAAK,oBAAsB,CAC5CY,OAAQ,OACRjB,KAAMkB,KAAKC,UAAU,CAACC,KAAK9B,EAAS+B,SAAQ,IAC5CC,QAAQ,CACNC,eAAgB,sBALJ,cACVxB,EADUiB,EAAAV,KAAAU,EAAAZ,KAAA,EAQGL,EAAOQ,OARV,OAQVP,EARUgB,EAAAV,KAShBnB,EAAYa,GACZT,EAAW,IAVK,wBAAAyB,EAAAR,SAAAO,MAAH,yBAAAD,EAAAL,MAAAC,KAAAC,YAAA,GA+BjB,OALEnB,oBAAU,WACLF,EAAQkC,OAAO,EAAGzC,GAAkB,GAC/BA,GAAkB,IAC3B,CAACO,IAGFmC,EAAA7B,EAAA8B,cAAAD,EAAA7B,EAAA+B,SAAA,KACAF,EAAA7B,EAAA8B,cAAA,OAAKE,UAAU,cACbH,EAAA7B,EAAA8B,cAAA,yBACAD,EAAA7B,EAAA8B,cAAA,8BAAsBxC,EAASsC,QAC/BC,EAAA7B,EAAA8B,cAAA,OAAKE,UAAU,oBACfH,EAAA7B,EAAA8B,cAAA,aACED,EAAA7B,EAAA8B,cAAA,SAAOG,MAAOvC,EAASwC,SAAU,SAAAC,GAAK,OAAIxC,EAAWwC,EAAMC,OAAOH,WAEpEJ,EAAA7B,EAAA8B,cAAA,UAAQE,UAAU,eAAeK,SAAUnD,EAAgBoD,QAAS,kBAAMrB,MAA1E,aAEAY,EAAA7B,EAAA8B,cA7BS,WACX,OACID,EAAA7B,EAAA8B,cAAA,WACCxC,EAASiD,IAAI,SAACC,EAAKC,GAClB,OACAZ,EAAA7B,EAAA8B,cAAA,OAAKW,IAAKA,IACVD,EAAKf,SAAWI,EAAA7B,EAAA8B,cAAA,OAAKE,UAAU,aAAf,IAA6BQ,EAAKhB,MACnDgB,EAAKf,SAAWI,EAAA7B,EAAA8B,cAAA,OAAKE,UAAU,WAAWQ,EAAKhB,WAsBlD,SCtCWkB,EAhBE,kBACbb,EAAA7B,EAAA8B,cAAAD,EAAA7B,EAAA+B,SAAA,KACAF,EAAA7B,EAAA8B,cAAA,8CACAD,EAAA7B,EAAA8B,cAAA,sVAOAD,EAAA7B,EAAA8B,cAAA,OAAKE,UAAU,sBACfH,EAAA7B,EAAA8B,cAACa,EAAD,SCeWC,EA3BG,kBACdf,EAAA7B,EAAA8B,cAAAD,EAAA7B,EAAA+B,SAAA,KACAF,EAAA7B,EAAA8B,cAAA,sBACAD,EAAA7B,EAAA8B,cAAA,kLAIAD,EAAA7B,EAAA8B,cAAA,KAAGe,KAAK,0CAA2CC,IAAI,sBAAsBV,OAAO,UAApF,YACAP,EAAA7B,EAAA8B,cAAA,kdAQAD,EAAA7B,EAAA8B,cAAA,2bCEWiB,EAjBM,SAAA7B,GAAA,IAAG8B,EAAH9B,EAAG8B,SAAH,OACjBnB,EAAA7B,EAAA8B,cAAAD,EAAA7B,EAAA+B,SAAA,KACCiB,EAAST,IAAI,SAACU,EAASR,GAAV,OAEVZ,EAAA7B,EAAA8B,cAAA,OAAKE,UAAU,oBAAqBS,IAAKA,GACzCZ,EAAA7B,EAAA8B,cAACoB,EAAA,EAAD,CAAMlB,UAAU,eAAemB,GAAE,YAAAC,OAAcH,EAAQI,OAAOC,OAC1DzB,EAAA7B,EAAA8B,cAAA,OAAKE,UAAU,gBACfH,EAAA7B,EAAA8B,cAAA,OAAKE,UAAU,eAAeuB,IAAKN,EAAQI,OAAOG,cAAcH,OAAOI,KAAKC,IAAKC,IAAKV,EAAQI,OAAOO,QACrG/B,EAAA7B,EAAA8B,cAAA,UAAKmB,EAAQI,OAAOO,OACpB/B,EAAA7B,EAAA8B,cAAA,SAAImB,EAAQI,OAAOjD,KAAKyD,UAAU,EAAG,KAArC,sBCqBGC,EA7BU,WAAK,IAAAjF,EACeC,qBADfC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACnBkF,EADmBhF,EAAA,GACJiF,EADIjF,EAAA,GAEpBkF,EAAa,eAAA/C,EAAAlC,OAAAc,EAAA,EAAAd,CAAAe,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAgE,EAAA,OAAAnE,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACA2D,IAAwB,CACtCC,MAAO,eACPC,YAAa,gDAHC,cACdH,EADc5D,EAAAI,KAAAJ,EAAAgE,OAAA,SAKPJ,GALO,wBAAA5D,EAAAM,SAAAV,MAAH,yBAAAgB,EAAAL,MAAAC,KAAAC,YAAA,GAkBnB,OAVCnB,oBAAU,WAAI,SAAAC,IAAA,OAAAA,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,EAAAC,EAAAC,KACT,SAAAkB,IAAA,OAAApB,EAAAC,EAAAK,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EACmByD,IADnB,OAAA7C,EAAAV,KAEM6D,aAAaC,KAAK,SAAAC,GAAW,IAATC,EAASD,EAATC,MACpBV,EAAkBU,KAHxB,wBAAAtD,EAAAR,SAAAO,OADSN,MAAAC,KAAAC,YAAA,WAAAlB,EAAAgB,MAAAC,KAAAC,WAOXC,IACG,IAGHa,EAAA7B,EAAA8B,cAAAD,EAAA7B,EAAA+B,SAAA,KACAF,EAAA7B,EAAA8B,cAAA,sBAECiC,GAAkBlC,EAAA7B,EAAA8B,cAAC6C,EAAD,CAAc3B,SAAUe,KACzCA,GAAkBlC,EAAA7B,EAAA8B,cAAA,OAAKE,UAAU,iBAAf,aCZb4C,EAfM,SAAA1D,GAAkB,IAAf2D,EAAe3D,EAAf2D,SAEpB,OADAA,EAASC,UAETjD,EAAA7B,EAAA8B,cAAAD,EAAA7B,EAAA+B,SAAA,KACAF,EAAA7B,EAAA8B,cAAA,uBACC+C,EAAStC,IAAI,SAACwC,EAAStC,GAAV,OACVZ,EAAA7B,EAAA8B,cAAA,OAAKE,UAAU,UAAUS,IAAKA,GAC1BZ,EAAA7B,EAAA8B,cAAA,UAAKiD,EAAQC,UACbnD,EAAA7B,EAAA8B,cAAA,SAAIiD,EAAQE,WCQTC,EAhBQ,SAAAhE,GAA8C,IAA3CiE,EAA2CjE,EAA3CiE,YAAaC,EAA8BlE,EAA9BkE,QAASC,EAAqBnE,EAArBmE,eACtCC,EAAa,eAAAb,EAAAzF,OAAAc,EAAA,EAAAd,CAAAe,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACGC,MAAK,iBAAA2C,OAAkB+B,EAAlB,WAAwC,CAC9D9D,OAAQ,SAFM,cACZlB,EADYG,EAAAI,KAAAJ,EAAAE,KAAA,EAICL,EAAOQ,OAJR,OAIZP,EAJYE,EAAAI,KAKlB2E,EAAejF,GALG,wBAAAE,EAAAM,SAAAV,MAAH,yBAAAuE,EAAA5D,MAAAC,KAAAC,YAAA,GAOnB,OACIc,EAAA7B,EAAA8B,cAAA,OAAKyD,GAAG,mBACJ1D,EAAA7B,EAAA8B,cAAA,UAAQE,UAAU,kBAAkBM,QAAS,kBAAMgD,MAAnD,cACAzD,EAAA7B,EAAA8B,cAAA,2BAAmBsD,KCgChBI,EAzCQ,SAAAtE,GAAqC,IAAlCiE,EAAkCjE,EAAlCiE,YAAaE,EAAqBnE,EAArBmE,eAAqBxG,EACxBC,mBAAS,IADeC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACjDmG,EADiDjG,EAAA,GACvC0G,EADuC1G,EAAA,GAAAK,EAElBN,mBAAS,IAFSO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAEjDsG,EAFiDrG,EAAA,GAEpCsG,EAFoCtG,EAAA,GAAAG,EAGzBV,oBAAS,GAHgBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGjD6C,EAHiD5C,EAAA,GAGvCmG,EAHuCnG,EAAA,GAKlDoG,EAAU,eAAApB,EAAAzF,OAAAc,EAAA,EAAAd,CAAAe,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACMC,MAAK,iBAAA2C,OAAkB+B,EAAlB,gBAA6C,CACnE9D,OAAQ,OACRjB,KAAMkB,KAAKC,UAAU,CAAEyD,WAAUC,KAAMS,IACvChE,QAAS,CACLC,eAAgB,sBALT,cACTxB,EADSG,EAAAI,KAAAJ,EAAAE,KAAA,EAQIL,EAAOQ,OARX,OAQTP,EARSE,EAAAI,KASf2E,EAAejF,GACfqF,EAAY,IACZE,EAAe,IACfC,GAAY,GAZG,yBAAAtF,EAAAM,SAAAV,MAAH,yBAAAuE,EAAA5D,MAAAC,KAAAC,YAAA,GAoBhB,OALAnB,oBAAU,WACFoF,EAASpD,OAAO,GAAK8D,EAAY9D,OAAO,EAAGgE,GAAY,GAClDA,GAAY,IACtB,CAACF,EAAaV,IAGbnD,EAAA7B,EAAA8B,cAAA,OAAKyD,GAAG,oBACJ1D,EAAA7B,EAAA8B,cAAA,2BACAD,EAAA7B,EAAA8B,cAAA,sBAEID,EAAA7B,EAAA8B,cAAA,SAAOgE,KAAK,OAAOP,GAAG,WAAWtD,MAAO+C,EAAU9C,SAAU,SAACC,GAAD,OAAWsD,EAAYtD,EAAMC,OAAOH,WAEpGJ,EAAA7B,EAAA8B,cAAA,yBAEID,EAAA7B,EAAA8B,cAAA,YAAUiE,KAAK,IAAIR,GAAG,UAAUS,UAAU,MAAMC,KAAK,KAAKhE,MAAOyD,EAAaxD,SAAU,SAACC,GAAD,OAAWwD,EAAexD,EAAMC,OAAOH,WAEnIJ,EAAA7B,EAAA8B,cAAA,UAAQE,UAAU,kBAAkBK,SAAUA,EAAUC,QAAS,kBAAMuD,MAAvE,iBClCGK,EAJM,kBACjBrE,EAAA7B,EAAA8B,cAAA,kCC8FWqE,EAvFK,SAAAjF,GAAe,IAAZkF,EAAYlF,EAAZkF,MACbC,EAAgBC,EAAQ,KADCzH,EAGUC,qBAHVC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAGxBkF,EAHwBhF,EAAA,GAGTiF,EAHSjF,EAAA,GAAAK,EAIHN,qBAJGO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAIxB6D,EAJwB5D,EAAA,GAIfkH,EAJelH,EAAA,GAAAG,EAKHV,oBAAS,GALNW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAKxBgH,EALwB/G,EAAA,GAKfgH,EALehH,EAAA,GAOzB+B,EAAO4E,EAAMM,OAAOlF,KAPKmF,EASO7H,mBAAS,CAAEsG,QAAS,EAAGP,SAAU,KATxC+B,EAAA5H,OAAAC,EAAA,EAAAD,CAAA2H,EAAA,GASxBE,EATwBD,EAAA,GASXvB,EATWuB,EAAA,GAYzB3C,EAAa,eAAAQ,EAAAzF,OAAAc,EAAA,EAAAd,CAAAe,EAAAC,EAAAC,KAAG,SAAAC,IAAA,IAAAgE,EAAA,OAAAnE,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACA2D,IAAwB,CACtCC,MAAO,eACPC,YAAa,gDAHC,cACdH,EADc5D,EAAAI,KAAAJ,EAAAgE,OAAA,SAKPJ,GALO,wBAAA5D,EAAAM,SAAAV,MAAH,yBAAAuE,EAAA5D,MAAAC,KAAAC,YAAA,GAgDnB,GAxCAnB,oBAAU,WAAI,SAAAC,IAAA,OAAAA,EAAAb,OAAAc,EAAA,EAAAd,CAAAe,EAAAC,EAAAC,KACV,SAAAkB,IAAA,OAAApB,EAAAC,EAAAK,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EACmByD,IADnB,OAAA7C,EAAAV,KAEM6D,aAAaC,KAAK,SAAAsC,GAAW,IAATpC,EAASoC,EAATpC,MACpBV,EAAkBU,KAHxB,wBAAAtD,EAAAR,SAAAO,OADUN,MAAAC,KAAAC,YAAA,WAAAlB,EAAAgB,MAAAC,KAAAC,WAOZC,IACG,IAEFpB,oBAAU,WACN,GAAGmE,EAAe,CACjB,IAAMgD,EAAkBhD,EAAeiD,KAAK,SAAA/D,GACxC,OAAOA,EAAQI,OAAOC,OAAS9B,IAEhCuF,IACER,EAAWQ,EAAgB1D,QAC3BoD,GAAW,MAGlB,CAAC1C,IAEPnE,oBAAU,WACN,IAAMoB,EAAS,eAAAiG,EAAAjI,OAAAc,EAAA,EAAAd,CAAAe,EAAAC,EAAAC,KAAG,SAAAiH,IAAA,IAAA/G,EAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAA8G,GAAA,cAAAA,EAAA5G,KAAA4G,EAAA3G,MAAA,cAAA2G,EAAA3G,KAAA,EACOC,MAAK,iBAAA2C,OAAkB5B,IAD9B,cACRrB,EADQgH,EAAAzG,KAAAyG,EAAA3G,KAAA,EAEKL,EAAOQ,OAFZ,OAERP,EAFQ+G,EAAAzG,KAGd2E,EAAejF,GAHD,wBAAA+G,EAAAvG,SAAAsG,MAAH,yBAAAD,EAAApG,MAAAC,KAAAC,YAAA,GAMf,GAAGgD,EAAe,CACd,IAAMgD,EAAkBhD,EAAeiD,KAAK,SAAA/D,GACxC,OAAOA,EAAQI,OAAOC,OAAS9B,IAEnC+E,EAAWQ,EAAgB1D,QAG/BrC,IACAoG,OAAOC,SAAS,EAAG,IACpB,CAAC7F,IAEDgF,EAAS,OAAO3E,EAAA7B,EAAA8B,cAAA,OAAKE,UAAU,iBAAf,WACnB,IAAIiB,EAAS,OAAOpB,EAAA7B,EAAA8B,cAACwF,EAAD,MAEpB,IAAMC,EAAgBxD,EAAeyD,OAAO,SAAAvE,GACxC,OAAGA,EAAQI,OAAOC,OAAQ9B,IAI9B,OACIK,EAAA7B,EAAA8B,cAAAD,EAAA7B,EAAA+B,SAAA,KACAF,EAAA7B,EAAA8B,cAAA,UAAKmB,EAAQW,OACb/B,EAAA7B,EAAA8B,cAAA,OACIE,UAAU,WACVuB,IAAKN,EAAQO,cAAcH,OAAOI,KAAKC,IACvCC,IAAKV,EAAQW,QAEf/B,EAAA7B,EAAA8B,cAACuE,EAAD,CAAeoB,OAAQxE,EAAQ7C,OAEjCyB,EAAA7B,EAAA8B,cAAC4F,EAAD,CAAgBvC,YAAa3D,EAAM4D,QAASyB,EAAYzB,QAASC,eAAgBA,IACjFxD,EAAA7B,EAAA8B,cAAC6F,EAAD,CAAgBxC,YAAa3D,EAAM6D,eAAgBA,IACnDxD,EAAA7B,EAAA8B,cAAC8F,EAAD,CAAc/C,SAAUgC,EAAYhC,WACpChD,EAAA7B,EAAA8B,cAAA,6BACAD,EAAA7B,EAAA8B,cAAC6C,EAAD,CAAc3B,SAAUuE,MCnEjBM,EAtBA,kBACXhG,EAAA7B,EAAA8B,cAAA,WACID,EAAA7B,EAAA8B,cAAA,UACID,EAAA7B,EAAA8B,cAAA,UACID,EAAA7B,EAAA8B,cAACoB,EAAA,EAAD,CAAMC,GAAG,KAAT,SAEJtB,EAAA7B,EAAA8B,cAAA,UACID,EAAA7B,EAAA8B,cAACoB,EAAA,EAAD,CAAMC,GAAG,UAAT,UAEJtB,EAAA7B,EAAA8B,cAAA,UACID,EAAA7B,EAAA8B,cAACoB,EAAA,EAAD,CAAMC,GAAG,kBAAT,aAEJtB,EAAA7B,EAAA8B,cAAA,UACID,EAAA7B,EAAA8B,cAAA,KAAGe,KAAK,0CAA2CC,IAAI,sBAAsBV,OAAO,UAApF,aAEJP,EAAA7B,EAAA8B,cAAA,UACID,EAAA7B,EAAA8B,cAAA,KAAGe,KAAK,6BAA8BC,IAAI,sBAAsBV,OAAO,UAAvE,cCgBD0F,2LAnBX,OACEjG,EAAA7B,EAAA8B,cAACoB,EAAA,EAAD,KACErB,EAAA7B,EAAA8B,cAAA,OAAKE,UAAU,OACbH,EAAA7B,EAAA8B,cAACiG,EAAD,MACAlG,EAAA7B,EAAA8B,cAAA,OAAKyD,GAAG,aACN1D,EAAA7B,EAAA8B,cAACkG,EAAA,EAAD,KACEnG,EAAA7B,EAAA8B,cAACkG,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWxF,EAAUyF,OAAK,IAC1CtG,EAAA7B,EAAA8B,cAACkG,EAAA,EAAD,CAAOC,KAAK,SAASC,UAAWtF,IAChCf,EAAA7B,EAAA8B,cAACkG,EAAA,EAAD,CAAOC,KAAK,iBAAiBC,UAAWpE,IACxCjC,EAAA7B,EAAA8B,cAACkG,EAAA,EAAD,CAAOC,KAAK,iBAAiBC,UAAW/B,IACxCtE,EAAA7B,EAAA8B,cAACkG,EAAA,EAAD,CAAOE,UAAWhC,eAZdkC,cCFEC,QACW,cAA7BjB,OAAOkB,SAASC,UAEe,UAA7BnB,OAAOkB,SAASC,UAEhBnB,OAAOkB,SAASC,SAASnC,MACvB,2DCVNoC,IAASC,OAAO5G,EAAA7B,EAAA8B,cAAC4G,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvE,KAAK,SAAAwE,GACjCA,EAAaC","file":"static/js/main.f3df9cef.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\nconst ToDoList = () => {\r\n  const [buttonDisabled, setButtonDisabled]= useState(true);\r\n  const[toDoList, setToDoList]=useState([]);\r\n  const[newToDo, setNewToDo]=useState('');\r\n\r\n  useEffect(() =>{\r\n      async function fetchData(){const result = await fetch(`/api/toDoList`);\r\n      const body = await result.json();\r\n      setToDoList(body);\r\n  }\r\n  fetchData();\r\n  },[]);\r\n\r\n  const addToLIst = async ()=>{\r\n    const result=await fetch(`/api/toDoList/add`, {\r\n      method: 'post',\r\n      body: JSON.stringify({name:newToDo, crossed:false}),\r\n      headers:{\r\n        'Content-Type': 'application/json',\r\n      }\r\n    });\r\n    const body = await result.json();\r\n    setToDoList(body);\r\n    setNewToDo('');\r\n  }\r\n  \r\nconst List = () => {\r\n  return(\r\n      <div>\r\n      {toDoList.map((item,key)=>{\r\n        return(\r\n        <div key={key}>   \r\n      {!item.crossed && <div className=\"uncrossed\"> {item.name}</div>}\r\n      {item.crossed && <div className=\"crossed\">{item.name}</div>}\r\n       </div>   \r\n        )})}\r\n      </div>\r\n  )}\r\n\r\n  useEffect(()=>{\r\n    if(newToDo.length>0) setButtonDisabled(false);\r\n       else setButtonDisabled(true);\r\n}, [newToDo]);\r\n\r\nreturn(\r\n  <>\r\n  <div className=\"to-do-list\">\r\n    <h2> To Do List</h2>\r\n    <h4>Number of Tasks: {toDoList.length}</h4>\r\n    <div className=\"toDo-add-section\">\r\n    <label >\r\n      <input value={newToDo} onChange={event => setNewToDo(event.target.value)} />\r\n    </label>\r\n    <button className=\"to-do-button\" disabled={buttonDisabled} onClick={() => addToLIst()}>Add Task</button>\r\n    </div>\r\n    <List/>\r\n  </div>\r\n  </>\r\n)\r\n\r\n}\r\n\r\nexport default ToDoList;\r\n","import React from 'react';\r\nimport ToDoList from '../components/ToDoList';\r\n\r\nconst HomePage = () => (\r\n    <>\r\n    <h1>Welcome to Everything But Bagel!</h1>\r\n    <p>\r\n        I created this React based site with the help of a lynda.com tutorial. The site is hosted on Amazon Web Services\r\n         and any persisted data (to do list, comments and upvotes) is stored\r\n        using a Mongo database. The calls are made using the Node framework Express.\r\n\r\n        All of the content in the articles are manged using the CMS Contentful.\r\n    </p>\r\n    <div className=\"ToDoList-container\">\r\n    <ToDoList/>\r\n    </div>\r\n    </>\r\n);\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nconst AboutPage = () => (\r\n    <>\r\n    <h1>About me</h1>\r\n    <p>\r\n        I am a software developer who created this website as a way of learning React. The experience with AWS, mongo and node was\r\n        a bonus. You can find out more about me at \r\n    </p>\r\n    <a href=\"https://www.linkedin.com/in/evanprather\"  rel=\"noopener noreferrer\" target=\"_blank\">LinkedIn</a> \r\n    <p>\r\n        Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n        Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n        nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n        sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n        interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n        consequat quam. Vivamus accumsan dui in facilisis aliquet.,\r\n    </p>\r\n    <p>\r\n        Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n        Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n        nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n        sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n        interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n        consequat quam. Vivamus accumsan dui in facilisis aliquet.,\r\n    </p>\r\n    </>\r\n);\r\n\r\nexport default AboutPage;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ArticlesList = ({ articles }) => (\r\n    <>\r\n    {articles.map((article, key) => (\r\n        \r\n        <div className=\"article-container\"  key={key}>\r\n        <Link className=\"article-list\" to={`/article/${article.fields.slug}`}>\r\n            <div className=\"article-item\">\r\n            <img className=\"list-picture\" src={article.fields.featuredImage.fields.file.url} alt={article.fields.title}/>\r\n            <h3>{article.fields.title}</h3>\r\n            <p>{article.fields.body.substring(0, 150)}...</p>\r\n            </div>\r\n        </Link>\r\n        </div>\r\n    ))}\r\n    </>\r\n);\r\n\r\nexport default ArticlesList;","import React, {useState, useEffect} from 'react';\r\nimport ArticlesList from '../components/ArticlesList';\r\nimport * as contentful from 'contentful'\r\n\r\nconst ArticlesListPage = () =>{ \r\n    const [articleContent,setArticleContent]=useState();\r\n    const getContentful = async()=>{\r\n        let client= await contentful.createClient({\r\n            space: '4l76bla6vbnr',\r\n            accessToken: 'iIk069YpSKyGEGpv-dY5HnnWpXZo1AbP00lp7wcg3y0'\r\n            })\r\n            return client;\r\n        }  \r\n\r\n     useEffect(()=>{\r\n          async function fetchData() {\r\n            const cat= await getContentful();\r\n            cat.getEntries().then(({items})=>{\r\n                setArticleContent(items);\r\n            })\r\n        }\r\n        fetchData();\r\n         },[]);\r\n\r\n    return(\r\n        <>\r\n        <h1>Articles</h1>\r\n\r\n        {articleContent && <ArticlesList articles={articleContent} />}\r\n        {!articleContent && <div className=\"class-loading\">Loading</div>}\r\n        </>\r\n)};\r\n\r\nexport default ArticlesListPage;","import React from 'react';\n\nconst CommentsList = ({ comments }) => {\n    comments.reverse();\n    return (\n    <>\n    <h3>Comments:</h3>\n    {comments.map((comment, key) => (\n        <div className=\"comment\" key={key}>\n            <h4>{comment.username}</h4>\n            <p>{comment.text}</p>\n        </div>\n    ))}\n    </>\n    )\n};\n\nexport default CommentsList;","import React from 'react';\r\n\r\nconst UpvotesSection = ({ articleName, upvotes, setArticleInfo }) => {\r\n    const upvoteArticle = async () => {\r\n        const result = await fetch(`/api/articles/${articleName}/upvote`, {\r\n            method: 'post',\r\n        });\r\n        const body = await result.json();\r\n        setArticleInfo(body);\r\n    }\r\n    return (\r\n        <div id=\"upvotes-section\">\r\n            <button className=\"standard-button\" onClick={() => upvoteArticle()}>Add Upvote</button>\r\n            <p>Total Upvotes: {upvotes}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpvotesSection;","import React, { useState, useEffect } from 'react';\r\n\r\n\r\n\r\nconst AddCommentForm = ({ articleName, setArticleInfo }) => {\r\n    const [username, setUsername] = useState('');\r\n    const [commentText, setCommentText] = useState('');\r\n    const [disabled, setDisabled]= useState(true);\r\n\r\n    const addComment = async () => {\r\n        const result = await fetch(`/api/articles/${articleName}/add-comment`, {\r\n            method: 'post',\r\n            body: JSON.stringify({ username, text: commentText }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        });\r\n        const body = await result.json();\r\n        setArticleInfo(body);\r\n        setUsername('');\r\n        setCommentText('');\r\n        setDisabled(true);\r\n    }\r\n\r\n    useEffect(()=>{\r\n         if(username.length>0 && commentText.length>0) setDisabled(false);\r\n            else setDisabled(true);\r\n    }, [commentText, username]);\r\n\r\n    return (\r\n        <div id=\"add-comment-form\">\r\n            <h3>Add a Comment</h3>\r\n            <label>\r\n                Name *\r\n                <input type=\"text\" id=\"username\" value={username} onChange={(event) => setUsername(event.target.value)} />\r\n            </label>\r\n            <label>\r\n                Comment *\r\n                <textarea rows=\"4\" id=\"comment\" maxLength=\"200\" cols=\"50\" value={commentText} onChange={(event) => setCommentText(event.target.value)} />\r\n            </label>\r\n            <button className=\"standard-button\" disabled={disabled} onClick={() => addComment()}>Add Comment</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddCommentForm;","import React from 'react';\n\nconst NotFoundPage = () => (\n    <h1>404: Page Not Found</h1>\n);\n\nexport default NotFoundPage;","import React, { useState, useEffect } from 'react';\r\nimport ArticlesList from '../components/ArticlesList';\r\nimport CommentsList from '../components/CommentsList';\r\nimport UpvotesSection from '../components/UpvotesSection';\r\nimport AddCommentForm from '../components/AddCommentForm';\r\nimport NotFoundPage from './NotFoundPage';\r\n\r\n//import articleContent from './article-content';\r\nimport * as contentful from 'contentful'\r\n\r\nconst ArticlePage = ({ match }) => {\r\n    const ReactMarkdown = require('react-markdown');\r\n\r\n    const [articleContent,setArticleContent]=useState();\r\n    const [article, setArticle]=useState();\r\n    const [loading, setLoading]=useState(true);\r\n\r\n    const name = match.params.name;\r\n\r\n    const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\r\n\r\n\r\n    const getContentful = async()=>{\r\n        let client= await contentful.createClient({\r\n            space: '4l76bla6vbnr',\r\n            accessToken: 'iIk069YpSKyGEGpv-dY5HnnWpXZo1AbP00lp7wcg3y0'\r\n            })\r\n            return client;\r\n        }  \r\n    \r\n    useEffect(()=>{\r\n        async function fetchData() {\r\n          const cat= await getContentful();\r\n          cat.getEntries().then(({items})=>{\r\n              setArticleContent(items);\r\n          })\r\n      }\r\n      fetchData();\r\n       },[]);\r\n\r\n       useEffect(()=>{\r\n           if(articleContent){\r\n            const selectedArticle = articleContent.find(article => {\r\n                return article.fields.slug === name\r\n            });\r\n            if(selectedArticle){\r\n                 setArticle(selectedArticle.fields);\r\n                 setLoading(false);\r\n            }\r\n           }\r\n       }, [articleContent]);\r\n       \r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await fetch(`/api/articles/${name}`);\r\n            const body = await result.json();\r\n            setArticleInfo(body);\r\n        }\r\n\r\n        if(articleContent){\r\n            const selectedArticle = articleContent.find(article => {\r\n                return article.fields.slug === name\r\n            });\r\n            setArticle(selectedArticle.fields);\r\n           }\r\n       \r\n        fetchData();\r\n        window.scrollTo(0, 0);\r\n    }, [name]);\r\n\r\n    if(loading) return <div className=\"class-loading\">Loading</div>\r\n    if(!article) return <NotFoundPage />\r\n\r\n    const otherArticles = articleContent.filter(article =>{\r\n        if(article.fields.slug !==name) return true;\r\n        return false;\r\n    })\r\n    \r\n    return (\r\n        <>\r\n        <h1>{article.title}</h1>\r\n        <img\r\n            className=\"img-main\"\r\n            src={article.featuredImage.fields.file.url}\r\n            alt={article.title}\r\n          />\r\n          <ReactMarkdown source={article.body} />\r\n\r\n        <UpvotesSection articleName={name} upvotes={articleInfo.upvotes} setArticleInfo={setArticleInfo} />\r\n        <AddCommentForm articleName={name} setArticleInfo={setArticleInfo} />\r\n        <CommentsList comments={articleInfo.comments} />\r\n        <h2>Other Articles:</h2>\r\n        <ArticlesList articles={otherArticles} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ArticlePage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NavBar = () => (\n    <nav>\n        <ul>\n            <li>\n                <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n                <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n                <Link to=\"/articles-list\">Articles</Link>\n            </li>\n            <li>\n                <a href=\"https://www.linkedin.com/in/evanprather\"  rel=\"noopener noreferrer\" target=\"_blank\">LinkedIn</a>\n            </li>\n            <li>\n                <a href=\"https://github.com/EPrathe\"  rel=\"noopener noreferrer\" target=\"_blank\">GitHub</a>\n            </li>\n        </ul>\n    </nav>\n);\n\nexport default NavBar;","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ArticlesListPage from './pages/ArticlesListPage';\nimport ArticlePage from './pages/ArticlePage';\nimport NotFoundPage from './pages/NotFoundPage';\nimport NavBar from './NavBar';\nimport './App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <NavBar />\n          <div id=\"page-body\">\n            <Switch>\n              <Route path=\"/\" component={HomePage} exact />\n              <Route path=\"/about\" component={AboutPage} />\n              <Route path=\"/articles-list\" component={ArticlesListPage} />\n              <Route path=\"/article/:name\" component={ArticlePage} />\n              <Route component={NotFoundPage} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'whatwg-fetch';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}